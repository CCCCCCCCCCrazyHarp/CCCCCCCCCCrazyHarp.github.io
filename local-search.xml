<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第一篇文章-搭建一个个人博客</title>
    <link href="/2023/12/29/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%EF%BC%882%EF%BC%89/"/>
    <url>/2023/12/29/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%EF%BC%882%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>网站上线啦——将网站托管在github上</p><span id="more"></span><h1 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面"></a>写在最前面</h1><p>首先是关于搭建网站的文章的计划</p><ul><li>文章随着实际上的进度更新</li><li>最后会有一个单纯写步骤的省流版文章<br>其次是一些关于文章管理的想法<br><em>这部分应该会梳理成一个思维导图，但是考试周要到了还是饶了我吧我回头补</em></li></ul><h1 id="把网页托管在github上"><a href="#把网页托管在github上" class="headerlink" title="把网页托管在github上"></a>把网页托管在github上</h1><p><strong>作为一个暂时的过度计划以这种形式部署网站使其可以在网络上访问</strong><br><del>反正不要钱</del><br>首先新建一个仓库：名字是GitHub的用户名+github.io<br>然后与此同时，在仓库的设置界面上就会有一个page选项，在page选项里面设置自己的上传分支。</p><blockquote><p>由于我实在想不明白这个博客有啥好管理版本的所以就全写在main里面了</p></blockquote><p>与此同时，可以去配置本地的环境了。<br><strong>具体的配置方式取决于你选择的工作平台和hexo主题方案</strong><br>根据你的需求补全yaml文件，接下来就可以使用git进行测试推送了。</p><h1 id="写一篇博客并上传"><a href="#写一篇博客并上传" class="headerlink" title="写一篇博客并上传"></a>写一篇博客并上传</h1><h2 id="生成一个空文本"><a href="#生成一个空文本" class="headerlink" title="生成一个空文本"></a>生成一个空文本</h2><p><em>相信你不久还会回来看这一节的，虽然我更建议自己翻看文档去</em><br>启动Hexo</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">~$ hexo severe<br></code></pre></td></tr></table></figure><p>新建</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">~$ hexo new (-[a]) &#123;filemane&#125;<br></code></pre></td></tr></table></figure><p>a: -page  <em>页面，会创造一个网页放在sourse&#x2F;文件夹里</em><br>   -draft  <em>草稿，用这个命令生成的文件会放在sourse&#x2F;_draft文件夹里</em><br>如果你新建了一个草稿</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">~$ hexo publish &#123;filename&#125;<br></code></pre></td></tr></table></figure><p>将草稿发布，会发现文件移动到了sourse&#x2F;_post 文件里</p><p>此时应该就可以在本体网页里面看到文章了<br>如果你直接新建了文章</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">~$ hexo clean //清除缓存<br>~$ hexo g //generate，生成新的页面<br>~$ hexo d //deploy，布置页面<br></code></pre></td></tr></table></figure><p>同时把代码修改git即可</p><h1 id="关于YMAL"><a href="#关于YMAL" class="headerlink" title="关于YMAL"></a>关于YMAL</h1><p>有以下对应表可供参考</p><p>虽然我的打算是直接用脚本在OB写完之后放在post文件夹里面的，但是还是写一下原理上all in IDE的做法<br>首先是模板：<br>在文件里面有一个模板文件夹，里面放了若干个文件，对应不同的模板<br>其中DRAFT文件就是草稿的模板，然后每次新建草稿的时候就会按照这个文件的格式来创建，默认的主要内容是一个frontmatter，里面有上述的若干YMAL属性中的一部分，再创建文章的时候会根据这个生成。<br>你也许会问，我直接复制不也可以吗为什么非要这个模板。这就要说到另一个一个模板的作用了。动态获取与继承。<br>动态获取是一类形如的特殊字段，会再生成文本的过程中充当变量，根据当时的环境改变值。比如会获取时间，第一篇文章-搭建一个个人博客会获取标题，会要求用户输入一个值，有了这样的模板，会剩下很多没啥必要的重复填写，这些填写主要的特点是重复但是不完全相同。另一个是继承，依照类继承的思想，也提供了一定的默认值，这样的文章可以做类似方案的多个值再多个文件的统一修改。比如我现在给所有的网站搭建相关的文章设置了一个名叫display的属性决定是否可见，如果有一天我觉得访客看省流版就好了，我只需要在父文件中间修改display的值即可。<br>重要的思想很常见，但是应该是来自于另一个体系，但是他具体的归属目前还没有功夫查找</p><h2 id="关于tag与分类"><a href="#关于tag与分类" class="headerlink" title="关于tag与分类"></a>关于tag与分类</h2><p>hexo的文章分类有两个方式：tag和分类。一个是树状的结构一个是平行的结构，没有类似OB的二级标题这种类似森林的分类法。</p><h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1><p>直接删除文件然后clean,g,d就可以了应该，顺带用git进行commit就结束了</p><h1 id="下一步计划"><a href="#下一步计划" class="headerlink" title="下一步计划"></a>下一步计划</h1><p>修改下相关文字内容,现在还是默认文字太难崩了，顺带把首页的文字动画关掉，不符合设计逻辑。</p><h1 id="回顾与反思"><a href="#回顾与反思" class="headerlink" title="回顾与反思"></a>回顾与反思</h1><p>在搭建网站的过程中发现主角按明白OB怎么设置是比较合理的了，果然这种高度定制的软件从技术生态入手是比较合理的一种做法</p>]]></content>
    
    
    
    <tags>
      
      <tag>搭建网站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇文章-搭建一个个人博客</title>
    <link href="/2023/12/28/build-a-webpafe-on-github/"/>
    <url>/2023/12/28/build-a-webpafe-on-github/</url>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>首先作为一个学计算机的，看到很多大佬都在写自己的博客感觉很酷，接着就是据说需要博客对找工作很有用这样的说法吧，最后是期末考试快到了，那这个作为一个缓解压力换脑子的手段，另一方面，最近了解了一下同人圈子，感觉他们用的模式是一种很不错的共享模式，同时也有很多良性互动，好处很多，觉得这样对学习工作生活都很有用就这么做了。</p><h1 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h1><h2 id="最初的思考-需不需要自己搭一个"><a href="#最初的思考-需不需要自己搭一个" class="headerlink" title="最初的思考-需不需要自己搭一个"></a>最初的思考-需不需要自己搭一个</h2><p>在搜索过程中，我发现了两种主流的方法：第一种是自己搭建一个个人博客页面；第二种是使用诸如lofter，简书，CSDN的已经成型的博客网站服务。<br>第一种方式作为一个写技术相关的博客是更合理的一种选择，但是第二种方式十分契合我的需求，而且无痛而快速，作为一个懒人，这种诱惑实在是不小。<br>因此我反思了一下我的需求并且列了一个清单对标：</p><ul><li>我需要一个技术博客，在这上面写技术相关的文章，所以要有一个足够简约而且便于摘录代码，复制代码的博客页面</li><li>我需要一个用来写各种想法与思考的博客，需要有若干中页面格式来满足我对不同内容的排版需求，所以需要一个多变的页面。</li><li>这个博客的编写应该与各个平台同步，比如我选择同步推送到CSDN或者lofter，而且要可选择的模式</li><li>这个博客支持Markdown格式渲染，因为我的本地写作模式就是使用md进行的，这样比较方便一点。</li><li>推送要具有灵活性，而且最好有可选的固定模式宏</li><li>可以在本地进行管理，懒得登录上去复制粘贴了</li><li>最好可以在OB里面完成全部内容，我需要断念一下在该做什么事情的时候做什么事情的能力。</li><li>界面最好好看一点，我自认为审美要求很高<br>综上所述，找一个现成的框架完成这些事情属是有点难，所以打算自己做了。</li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>首先是自己写的话需要学多久的问题，尤其是从头学。<br>这个倒是好解决，我学技术是因为没有一整套方案，那么如果我把它分成几个模块，然后我写几个小东西当作“粘合剂”的话岂不是省了好多事<br>最后就变成了本地git+模板的初期方案</p><h2 id="开始做吧"><a href="#开始做吧" class="headerlink" title="开始做吧"></a>开始做吧</h2><h3 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h3><p>下载了Hxeo<br>下载了Nodejs<br>下载了IDE</p><h3 id="这下总能开始写了吧？"><a href="#这下总能开始写了吧？" class="headerlink" title="这下总能开始写了吧？"></a>这下总能开始写了吧？</h3><p>配置Hexo<br>找一个适合的模板先用着<br>具体的美化要等上手再看，我对现在的框架持悲观态度，只有白痴和专业两种模式。<br>接下来<br>暂时还按理说有一个外链，这件事不急，在各个文章分类里面都有一定数量的文章再说。白话几个月服务器钱属实不合适。</p><h2 id="那就先写点东西"><a href="#那就先写点东西" class="headerlink" title="那就先写点东西"></a>那就先写点东西</h2><p>在安排更具体的内容前先把要实现的事情大致列个清单<br>首先是学习类文章，但是不一定是学校的内容，这一部分我是觉得本地化了比较好，手写比较有效果。学习内容主要是课外的技术类的学习笔记，以摘录为主，然后<strong>所有的笔记都要有本地备份</strong>。<br>文学类的文章，一些诸如读书感悟，随笔之类的本来会发在朋友圈里的小文章，在网站上留一个备份，当然，这部分最好也有本地备份。毕竟情况有很多嘛。<br>感悟类的文章，所有的都可以写，基本固定在一个网页通过打tag的方式定位。<br>实用类的文章，一直想写的一类汇总文章，具有一定的传播能力和实用性，比如厦门大学生存手册，XMU计算机系生存手册这样的小文章。<br>原创文章：就把自己写的思考，做出来的成果放在这种地方就好了。</p><h3 id="文章之外还有什么"><a href="#文章之外还有什么" class="headerlink" title="文章之外还有什么"></a>文章之外还有什么</h3><p>首先我觉得既然有个服务器就好好玩他，不用白不用，给网页做点小动效。</p><h3 id="回到文章"><a href="#回到文章" class="headerlink" title="回到文章"></a>回到文章</h3><p>首先我认为吧，自己写要从抄别人的开始，收藏了好些个有名的博客，先做点总结类的工作，摸个初步的套路出来，因为我很烦重写写过的东西，而又是个完美主义者，虽然我只对自己写的东西有这种情怀就是了<br>接着是整理一下现在已经写过的东西，本地的资料数量是远大于博客中的，大概做一个文件分类，做好标记和自动化。OB目前还算不上什么成熟的软件，还需要很多客制化的小东西来做外部补足。<br>文章的主要来源除了ob也就是空间朋友圈这类的地方了，这么一看我写的东西真的不算很多，但是还是写的这么费劲实在是不合适</p><h1 id="最后的反思"><a href="#最后的反思" class="headerlink" title="最后的反思"></a>最后的反思</h1><p>web相关的内容，虽然之前玩电子书的时候学了一点HTML，但是这部分内容对我来说还是一个初次相见的内容，了解一点浅层的东西也算在我的目标上往前走了一步，广博的学习总是不会有错的，更何况是标配的博客呢？话又说回来，这种形式的做法会有费用与他们观看的压力在里面，也算是在另一层面鞭笞我的表达的做法吧。<br>而从表达来看，我的表达不仅很少，而且单一，但是我还没有形成某一种观念，所以不方便学习一些已经成体系的东西，现在为时尚早，学了他会影响我的独创性，直到我在看了一篇文章之后可以写出一篇像样的评论之后再去学习那些架构之类的为好。除此之外，我目前的培养方向大致就是一些基本能力比如总结创新套路这样的，而这需要大量的阅读，这种阅读的目的就不存粹是学习思想了，所以接下来的的阅读不一定就要局限在一些思想性很强的“正规书籍”里面，要去吃一点“垃圾”，因为我在这个阶段是需要先生产“垃圾”的，以写垃圾的经验作为底层，我才可以写出一些有点意思的东西。而技术方面，寒假只有一个月，我最可能的是把之前学的东西大致过一遍，因为我寒假的打算实在是有点多，不过按照往年的经验来看最终都是半吊子，我是习惯屏蔽外界的看法的，而我有不能有太强的内驱力，不然我大抵是不睡觉了，草我怎么这么奇怪啊好好学也不是摸鱼也不是。但是回看其原因，其实是因为我的动力上有带你问题，首先是因为我已经走出来社会因素导致的内耗，所以不存在由于他人注视产生的压力，我的压力和动力都产自自身，虽然表面上看是一件好事，但是实际上吧，由于中考高考的原因，也有我年轻时莫名的执着的原因，目前的我有点太极端了，这种力太过于强，因为在特化过后，我的内驱力是不受理性控制而且不需要存在理由的，我只能间接的影响它，所以，我容易受紧张影响和我容易一直搞这个不能兼顾。所以我的当务之急是寻找一个恰到好处的目标来把我的这种内驱力引导好。不然我算是被这玩意给毁了。好了第一篇先只有这么多，回头再考虑标题之类的事情吧。<br>2023.12.22，厦门，冬至日，德望图书馆，天气冷的要死。该去吃饺子了</p>]]></content>
    
    
    
    <tags>
      
      <tag>搭建网站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/22/hello-world/"/>
    <url>/2023/12/22/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My hexoFirst Page</title>
    <link href="/2021/09/25/page/"/>
    <url>/2021/09/25/page/</url>
    
    <content type="html"><![CDATA[<h1 id="测试内容请勿点击"><a href="#测试内容请勿点击" class="headerlink" title="测试内容请勿点击"></a>测试内容请勿点击</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p><em>斜体</em><br><strong>黑体</strong><br>普通文字</p><blockquote><p>引用<br>得到更多 </p><p>![quote]不能使用</p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
